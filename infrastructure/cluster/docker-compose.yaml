version: "3.9"

x-healthcheck: &default-healthcheck
  test: ["CMD-SHELL", "pgrep -f sshd >/dev/null && tmux -V >/dev/null"]
  interval: 10s
  timeout: 3s
  retries: 5
  start_period: 5s

services:
  node1:
    image: genai-node:latest
    container_name: node1
    hostname: node1
    ports:
      - "2221:22"            # host:container (SSH)
    environment:
      - FAKE_GPU_COUNT=2   
      - FAKE_SEED=42 
    networks:
      - cluster-net
    volumes:
      - ../data:/neurocore/data
      - ../logs:/neurocore/logs
    healthcheck: *default-healthcheck
    restart: unless-stopped

  node2:
    image: genai-node:latest
    container_name: node2
    hostname: node2
    ports:
      - "2222:22"
    environment:
      - FAKE_GPU_COUNT=1
      - FAKE_SEED=42
    networks:
      - cluster-net
    volumes:
      - ../data:/neurocore/data
      - ../logs:/neurocore/logs
    healthcheck: *default-healthcheck
    restart: unless-stopped

  node3:
    image: genai-node:latest
    container_name: node3
    hostname: node3
    ports:
      - "2223:22"
    environment:
      - FAKE_GPU_COUNT=1
      - FAKE_SEED=42
    networks:
      - cluster-net
    volumes:
      - ../data:/neurocore/data
      - ../logs:/neurocore/logs
    healthcheck: *default-healthcheck
    restart: unless-stopped

  # The "Observer" service that polls the nodes
  observer:
    build: ./observer # We will create this Dockerfile next
    # This observer needs to be on the same network to find 'node1'
    # and needs access to the data to write files
    volumes:
      - ./data-exchange:/data_out
    # This command runs our polling scripts in a loop
    command: >
      bash -c "while true; do
        python3 /opt/neurocore/discover_jobs.py &&
        python3 /opt/neurocore/poll_metrics.py;
        echo 'Observer polled, sleeping 5...';
        sleep 5;
      done"
    depends_on:
      - node1
      - node2

volumes:
networks:
  cluster-net:
    external: true           # reuse the existing Docker network
    name: cluster-net